const Camera=(()=>{let stream=null,track=null,torchOn=false;async function list(){const devs=await navigator.mediaDevices.enumerateDevices();return devs.filter(d=>d.kind==='videoinput')}async function start(deviceId,video){stop();stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:deviceId?{exact:deviceId}:undefined,facingMode:deviceId?undefined:'environment'},audio:false});video.srcObject=stream;await video.play();track=stream.getVideoTracks()[0];return stream}function stop(){if(stream){stream.getTracks().forEach(t=>t.stop());stream=null;track=null;torchOn=false}}async function toggleTorch(){if(!track)return false;const caps=track.getCapabilities?.();if(!caps||!caps.torch)return false;torchOn=!torchOn;await track.applyConstraints({advanced:[{torch:torchOn}]});return torchOn}async function autofocus(){if(!track)return false;const caps=track.getCapabilities?.();const settings=track.getSettings?.();if(caps&&caps.focusMode&&caps.focusMode.includes('continuous')){try{await track.applyConstraints({advanced:[{focusMode:'continuous'}]});return true}catch(e){}}if(caps&&caps.zoom){const z=settings.zoom??caps.zoom.min;const n=Math.min((z+(caps.zoom.step||0.1)),caps.zoom.max);try{await track.applyConstraints({advanced:[{zoom:n}]});await track.applyConstraints({advanced:[{zoom:z}]});return true}catch(e){}}return false}return{listCameras:list,start,stop,toggleTorch,autofocus}})();