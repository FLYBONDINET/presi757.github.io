let state={capturing:false,flightSessionId:null,cartIndex:0,currentCart:null,flightTotal:0,items:[],pending:0,synced:0,mode:'cam',seenCodes:new Set()};
(async function main(){
  const video=document.getElementById('preview');const overlay=document.getElementById('overlay');const ctx=overlay.getContext('2d');
  const cameraSelect=document.getElementById('cameraSelect');const torchBtn=document.getElementById('torchBtn');const focusBtn=document.getElementById('focusBtn');
  const startBtn=document.getElementById('startBtn');const stopBtn=document.getElementById('stopBtn');const endCartBtn=document.getElementById('endCartBtn');const endFlightBtn=document.getElementById('endFlightBtn');const undoBtn=document.getElementById('undoBtn');const clearBtn=document.getElementById('clearBtn');
  const countEl=document.getElementById('count');const flightTotalEl=document.getElementById('flightTotal');const pendingEl=document.getElementById('pending');const syncedEl=document.getElementById('synced');
  const cartModal=document.getElementById('cartModal');const cartNumberInput=document.getElementById('cartNumber');const cartOk=document.getElementById('cartOk');const cartCancel=document.getElementById('cartCancel');
  function loadSeen(sid){try{const raw=localStorage.getItem('seenCodes-'+sid);if(!raw)return new Set();return new Set(JSON.parse(raw))}catch(_){return new Set()}}
  function saveSeen(sid,set){try{localStorage.setItem('seenCodes-'+sid,JSON.stringify(Array.from(set)))}catch(_){}}
  async function populateCameras(){const cams=await Camera.listCameras();cameraSelect.innerHTML='';cams.forEach(c=>{const opt=document.createElement('option');opt.value=c.deviceId;opt.textContent=c.label||'Cámara';cameraSelect.appendChild(opt)})}
  function setStats(){countEl.textContent=state.items.length;flightTotalEl.textContent=state.flightTotal+state.items.length;pendingEl.textContent=state.pending;syncedEl.textContent=state.synced}
  function openCartModal(v=''){cartNumberInput.value=v;cartModal.hidden=false;setTimeout(()=>cartNumberInput.focus(),0)}function closeCartModal(){cartModal.hidden=true}
  function addItem(code){code=(code||'').trim();if(!code)return;if(state.seenCodes.has(code)){alert('⚠️ Código duplicado: ya está registrado en este vuelo.');return}
    const item={id:Utils.uuid(),code,ts:Date.now()};state.items.push(item);renderList();state.seenCodes.add(code);saveSeen(state.flightSessionId,state.seenCodes);setStats();navigator.vibrate?.(40);const beep=new Audio('data:audio/wav;base64,UklGRiQAAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQAAAAA=');beep.play().catch(()=>{})}
  function renderList(){const list=document.getElementById('list');list.innerHTML='';state.items.slice().reverse().forEach(it=>{const div=document.createElement('div');div.className='item';div.innerHTML=`<div class="item-head"><strong>${it.code}</strong><small>${new Date(it.ts).toLocaleTimeString()}</small></div>`;list.appendChild(div)})}
  function drawOverlay(){if(!video.videoWidth)return requestAnimationFrame(drawOverlay);overlay.width=video.clientWidth;overlay.height=video.clientHeight;ctx.clearRect(0,0,overlay.width,overlay.height);const w=overlay.width*.8,h=overlay.height*.3;const x=(overlay.width-w)/2,y=(overlay.height-h)/2;ctx.strokeStyle='#FFCC00';ctx.lineWidth=4;ctx.strokeRect(x,y,w,h);requestAnimationFrame(drawOverlay)}
  async function setupCamera(){await populateCameras();const devId=cameraSelect.value||undefined;await Camera.start(devId,video);await Scanner.init(video,(txt)=>addItem(txt));drawOverlay()}
  function getMeta(){const supervisor=document.getElementById('responsable').value.trim();const vuelo=document.getElementById('vuelo').value.trim();const origen=document.getElementById('origen').value.trim();const destino=document.getElementById('destino').value.trim();const observ=document.getElementById('observ').value.trim();const codigo=(document.getElementById('codigo')?.value||'').trim();const atd=(document.getElementById('atd')?.value||'').trim();const ata=(document.getElementById('ata')?.value||'').trim();const ok=supervisor&&vuelo&&origen&&destino;return{ok,supervisor,responsable:supervisor,vuelo,origen,destino,observ,codigo,atd,ata}}
  async function doStart(){const meta=getMeta();if(!meta.ok){alert('Completá Supervisor, Vuelo, Origen y Destino.');return}if(!state.flightSessionId){state.flightSessionId=Utils.uuid();state.flightTotal=0;state.cartIndex=0;state.seenCodes=loadSeen(state.flightSessionId)}state.items=[];renderList();setStats();openCartModal(`Carro ${state.cartIndex+1}`);cartOk.onclick=async()=>{const num=cartNumberInput.value.trim();if(!num){alert('Ingresá el número de carro');return}state.currentCart=num;state.cartIndex+=1;closeCartModal();await setupCamera();await Scanner.start();torchBtn.disabled=false;focusBtn.disabled=false;state.capturing=true;startBtn.disabled=true;stopBtn.disabled=false}}
  async function doStop(){Scanner.stop();Camera.stop();state.capturing=false;startBtn.disabled=false;stopBtn.disabled=true}
  async function persistBatch(endOfFlight=false){if(state.items.length===0&&!endOfFlight)return;const meta=getMeta();const batch={id:Utils.uuid(),created:Date.now(),meta:{...meta,carro:state.currentCart,sessionId:state.flightSessionId,cartIndex:state.cartIndex},mode:'cam',items:state.items.slice(),synced:false};await StorageAPI.addBatch(batch);try{await SheetsAPI.postBatch(batch);batch.synced=true;await StorageAPI.updateBatch(batch);state.synced+=batch.items.length}catch(e){state.pending+=batch.items.length}setStats()}
  startBtn.addEventListener('click',doStart);stopBtn.addEventListener('click',doStop);
  endCartBtn.addEventListener('click',async()=>{if(state.items.length===0){if(confirm('Sin lecturas en este carro. ¿Continuar con otro?')){openCartModal(`Carro ${state.cartIndex+1}`)}return}state.flightTotal+=state.items.length;await persistBatch(false);state.items=[];renderList();setStats();openCartModal(`Carro ${state.cartIndex+1}`)});
  endFlightBtn.addEventListener('click',async()=>{if(state.items.length>0){state.flightTotal+=state.items.length;await persistBatch(true);state.items=[]}renderList();setStats();await doStop();const meta=getMeta();alert(`Vuelo ${meta.vuelo} ${meta.origen}→${meta.destino}\nTotal: ${state.flightTotal} bultos en ${state.cartIndex} carros.`);try{localStorage.removeItem('seenCodes-'+state.flightSessionId)}catch(_){}state.flightSessionId=null;state.cartIndex=0;state.flightTotal=0;state.currentCart=null;state.seenCodes=new Set();setStats()});
  torchBtn.addEventListener('click',async()=>{const on=await Camera.toggleTorch();torchBtn.setAttribute('aria-pressed',on)});focusBtn.addEventListener('click',async()=>{await Camera.autofocus()});
  cameraSelect.addEventListener('change',async()=>{if(state.capturing){await setupCamera();await Scanner.start()}});video.addEventListener('click',()=>Camera.autofocus());
  undoBtn.addEventListener('click',()=>{state.items.pop();renderList();setStats()});clearBtn.addEventListener('click',()=>{if(confirm('¿Borrar lecturas actuales?')){state.items=[];renderList();setStats()}});
  try{await populateCameras()}catch(e){}
  SheetsAPI.syncPending();
})();