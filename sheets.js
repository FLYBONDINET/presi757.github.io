const SheetsAPI=(()=>{let cfg=null;async function load(){if(cfg)return cfg;try{const r=await fetch('config.json',{cache:'no-store'});cfg=await r.json()}catch(e){cfg={apps_script_url:''}}return cfg}async function postBatch(batch){const{apps_script_url}=await load();if(!apps_script_url)throw new Error('Falta apps_script_url');const body={vuelo:batch.meta?.vuelo,origen:batch.meta?.origen,destino:batch.meta?.destino,responsable:batch.meta?.responsable,supervisor:batch.meta?.supervisor,codigo:batch.meta?.codigo,atd:batch.meta?.atd,ata:batch.meta?.ata,device:navigator.userAgent,modo:batch.mode,items:batch.items,carro:batch.meta?.carro,cartIndex:batch.meta?.cartIndex,sessionId:batch.meta?.sessionId};const resp=await fetch(apps_script_url,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(body)});if(!resp.ok)throw new Error('HTTP '+resp.status);const js=await resp.json().catch(()=>({}));if(js&&js.ok===false)throw new Error('Apps Script error');return true}async function syncPending(){const bs=await StorageAPI.getAllBatches();for(const b of bs){if(b.synced)continue;try{await postBatch(b);b.synced=true;await StorageAPI.updateBatch(b)}catch(e){}}}window.addEventListener('online',syncPending);return{postBatch:postBatch,syncPending}})();